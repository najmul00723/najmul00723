<!DOCTYPE html>
<html lang="bn">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶´‡ßá - ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶ú‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° v2.3</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Hind+Siliguri:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
<link rel="manifest" href="manifest.json">
<script>
    if('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
            navigator.serviceWorker.register('./sw.js')
                .then(registration => console.log('Service Worker registered'))
                .catch(err => console.log('Service Worker registration failed: ', err));
        });
    }
</script>
        body { font-family: 'Hind Siliguri', sans-serif; }
        .chart-container { position: relative; width: 100%; max-width: 900px; margin-left: auto; margin-right: auto; height: 320px; max-height: 400px; }
        @media (min-width: 768px) { .chart-container { height: 400px; } }
        .sidebar-icon { width: 24px; height: 24px; }
        .nav-item.active { background-color: #E3E4DB; border-right: 4px solid #8A9A5B; }
        .modal { transition: opacity 0.3s ease; }
        .toast {
            transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
            transform: translateY(100%);
        }
        .toast.show {
            transform: translateY(0);
        }
    </style>
</head>
<body class="bg-[#F5F5F0] text-gray-800">
    <!-- Main Application Body -->
    <div id="app-body" class="hidden">
        <div class="flex h-screen">
            <aside class="w-20 md:w-64 bg-[#FFFFFF] shadow-lg flex flex-col">
                <div class="flex items-center justify-center h-20 border-b">
                    <h1 class="text-xl md:text-2xl font-bold text-[#8A9A5B]">‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶´‡ßá</h1>
                </div>
                <nav class="flex-grow pt-5">
                    <a href="#dashboard" class="nav-item flex items-center py-4 px-6 text-gray-700 hover:bg-gray-100 active"><span class="sidebar-icon">üè†</span><span class="mx-4 font-medium hidden md:inline">‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°</span></a>
                    <a href="#sales" class="nav-item flex items-center py-4 px-6 text-gray-700 hover:bg-gray-100"><span class="sidebar-icon">üìà</span><span class="mx-4 font-medium hidden md:inline">‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü</span></a>
                    <a href="#inventory" class="nav-item flex items-center py-4 px-6 text-gray-700 hover:bg-gray-100"><span class="sidebar-icon">üì¶</span><span class="mx-4 font-medium hidden md:inline">‡¶á‡¶®‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶∞‡¶ø</span></a>
                    <a href="#expenses" class="nav-item flex items-center py-4 px-6 text-gray-700 hover:bg-gray-100"><span class="sidebar-icon">üí∏</span><span class="mx-4 font-medium hidden md:inline">‡¶¨‡ßç‡¶Ø‡ßü</span></a>
                    <a href="#reports" class="nav-item flex items-center py-4 px-6 text-gray-700 hover:bg-gray-100"><span class="sidebar-icon">üìä</span><span class="mx-4 font-medium hidden md:inline">‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü</span></a>
                </nav>
                 <div class="p-4 border-t text-xs text-center text-gray-500">
                    <p id="user-email-display" class="font-semibold mb-1 truncate"></p>
                    <button id="logout-btn" class="text-red-500 font-bold hover:underline">‡¶≤‡¶ó ‡¶Ü‡¶â‡¶ü</button>
                </div>
            </aside>

            <main class="flex-1 p-4 md:p-10 overflow-y-auto">
                 <div id="dashboard-view" class="view">
                    <h2 class="text-2xl md:text-3xl font-bold mb-6">‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°</h2>
                    <p class="mb-8 text-gray-600">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶´‡ßá‡¶∞ ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡¶ø‡¶™‡ßç‡¶§ ‡¶ö‡¶ø‡¶§‡ßç‡¶∞ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡•§</p>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6 mb-8">
                        <div class="bg-white p-4 md:p-6 rounded-lg shadow"><h3 class="text-md md:text-lg font-semibold text-gray-500">‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶Æ‡ßã‡¶ü ‡¶Ü‡ßü</h3><p id="today-sales" class="text-2xl md:text-3xl font-bold mt-2">‡ß≥ ‡ß¶</p></div>
                        <div class="bg-white p-4 md:p-6 rounded-lg shadow"><h3 class="text-md md:text-lg font-semibold text-gray-500">‡¶ö‡¶≤‡¶§‡¶ø ‡¶Æ‡¶æ‡¶∏‡ßá‡¶∞ ‡¶≤‡¶æ‡¶≠</h3><p id="monthly-profit" class="text-2xl md:text-3xl font-bold mt-2">‡ß≥ ‡ß¶</p></div>
                        <div class="bg-white p-4 md:p-6 rounded-lg shadow"><h3 class="text-md md:text-lg font-semibold text-gray-500">‡¶ï‡¶Æ ‡¶∏‡ßç‡¶ü‡¶ï ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ</h3><p id="low-stock-items-count" class="text-2xl md:text-3xl font-bold mt-2">‡ß¶ ‡¶ü‡¶ø</p></div>
                    </div>
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <div class="bg-white p-4 md:p-6 rounded-lg shadow"><h3 class="text-lg md:text-xl font-semibold mb-4">‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßá‡¶∂‡¶ø ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶§ ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ</h3><div class="chart-container"><canvas id="topSellingChart"></canvas></div></div>
                        <div class="bg-white p-4 md:p-6 rounded-lg shadow"><h3 class="text-lg md:text-xl font-semibold mb-4">‡¶ï‡¶Æ ‡¶∏‡ßç‡¶ü‡¶ï‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ</h3><ul id="low-stock-list" class="space-y-3"></ul></div>
                    </div>
                </div>

                <div id="sales-view" class="view hidden">
                    <h2 class="text-2xl md:text-3xl font-bold mb-6">‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ</h2>
                    <div class="bg-white p-4 md:p-6 rounded-lg shadow mb-8">
                        <h3 class="text-lg md:text-xl font-semibold mb-4">‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
                        <form id="add-sale-form" class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div><label for="sale-item" class="block text-sm font-medium text-gray-700">‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ</label><select id="sale-item" class="mt-1 block w-full p-2 border border-gray-300 rounded-md"></select></div>
                            <div><label for="sale-quantity" class="block text-sm font-medium text-gray-700">‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£</label><input type="number" id="sale-quantity" value="1" min="1" class="mt-1 block w-full p-2 border border-gray-300 rounded-md"></div>
                            <div class="md:self-end"><button type="submit" class="w-full bg-[#8A9A5B] text-white py-2.5 rounded-md hover:bg-opacity-90">‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</button></div>
                        </form>
                    </div>
                    <div class="bg-white p-4 md:p-6 rounded-lg shadow"><h3 class="text-lg md:text-xl font-semibold mb-4">‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ</h3><div class="overflow-x-auto"><table class="w-full text-left text-sm"><thead><tr class="bg-gray-100"><th class="p-2 md:p-3">‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ</th><th class="p-2 md:p-3">‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ</th><th class="p-2 md:p-3 text-right">‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£</th><th class="p-2 md:p-3 text-right">‡¶Æ‡ßã‡¶ü (‡ß≥)</th><th class="p-2 md:p-3">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</th></tr></thead><tbody id="sales-table-body"></tbody></table></div></div>
                </div>

                <div id="inventory-view" class="view hidden">
                    <h2 class="text-2xl md:text-3xl font-bold mb-6">‡¶á‡¶®‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶∞‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ</h2>
                     <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 mb-6">
                        <button id="add-inventory-item-btn" class="bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700">‡¶®‡¶§‡ßÅ‡¶® ‡¶á‡¶®‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶∞‡¶ø ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ</button>
                        <button id="add-recipe-item-btn" class="bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700">‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ</button>
                    </div>
                    <div class="mb-4 border-b border-gray-200"><nav class="flex space-x-8" id="inventory-tabs"><button data-tab="stock" class="inventory-tab-btn py-4 px-1 border-b-2 border-[#8A9A5B] font-semibold">‡¶∏‡ßç‡¶ü‡¶ï</button><button data-tab="recipes" class="inventory-tab-btn py-4 px-1 border-b-2 border-transparent text-gray-500 hover:border-gray-300">‡¶∞‡ßá‡¶∏‡¶ø‡¶™‡¶ø</button></nav></div>
                    <div id="stock-tab-content" class="inventory-tab-content"><div class="bg-white p-4 md:p-6 rounded-lg shadow"><h3 class="text-lg md:text-xl font-semibold mb-4">‡¶ï‡¶æ‡¶Å‡¶ö‡¶æ‡¶Æ‡¶æ‡¶≤‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ</h3><div class="overflow-x-auto"><table class="w-full text-left text-sm"><thead><tr class="bg-gray-100"><th class="p-2 md:p-3">‡¶®‡¶æ‡¶Æ</th><th class="p-2 md:p-3">‡¶∏‡ßç‡¶ü‡¶ï</th><th class="p-2 md:p-3">‡¶®‡ßç‡¶Ø‡ßÇ‡¶®‡¶§‡¶Æ</th><th class="p-2 md:p-3">‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏</th><th class="p-2 md:p-3">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</th></tr></thead><tbody id="inventory-table-body"></tbody></table></div></div></div>
                    <div id="recipes-tab-content" class="inventory-tab-content hidden">
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                            <div class="bg-white p-4 md:p-6 rounded-lg shadow">
                                <h3 class="text-lg md:text-xl font-semibold mb-4">‡¶≤‡¶æ‡¶≠‡¶ú‡¶®‡¶ï ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ</h3>
                                <div class="chart-container">
                                    <canvas id="profitabilityChart"></canvas>
                                </div>
                            </div>
                            <div class="bg-white p-4 md:p-6 rounded-lg shadow">
                                <h3 class="text-lg md:text-xl font-semibold mb-4">‡¶∞‡ßá‡¶∏‡¶ø‡¶™‡¶ø ‡¶ì ‡¶≤‡¶æ‡¶≠‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ</h3>
                                <div class="overflow-x-auto">
                                    <table class="w-full text-left text-sm">
                                        <thead>
                                            <tr class="bg-gray-100">
                                                <th class="p-2 md:p-3">‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ</th>
                                                <th class="p-2 md:p-3 text-right">‡¶≤‡¶æ‡¶≠ (‡ß≥)</th>
                                                <th class="p-2 md:p-3 text-right">‡¶≤‡¶æ‡¶≠‡ßá‡¶∞ ‡¶π‡¶æ‡¶∞ (%)</th>
                                                <th class="p-2 md:p-3">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</th>
                                            </tr>
                                        </thead>
                                        <tbody id="recipe-table-body"></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="expenses-view" class="view hidden">
                    <h2 class="text-2xl md:text-3xl font-bold mb-6">‡¶¨‡ßç‡¶Ø‡ßü ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ</h2>
                    <div class="bg-white p-4 md:p-6 rounded-lg shadow mb-8">
                        <h3 class="text-lg md:text-xl font-semibold mb-4">‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡ßç‡¶Ø‡ßü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
                        <form id="add-expense-form" class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div><label for="expense-category" class="block text-sm font-medium text-gray-700">‡¶ñ‡¶æ‡¶§</label><input type="text" id="expense-category" placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: ‡¶¶‡ßã‡¶ï‡¶æ‡¶®‡ßá‡¶∞ ‡¶≠‡¶æ‡ßú‡¶æ" class="mt-1 block w-full p-2 border border-gray-300 rounded-md"></div>
                            <div><label for="expense-amount" class="block text-sm font-medium text-gray-700">‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ (‡ß≥)</label><input type="number" id="expense-amount" placeholder="20000" min="0" class="mt-1 block w-full p-2 border border-gray-300 rounded-md"></div>
                            <div class="md:self-end"><button type="submit" class="w-full bg-[#8A9A5B] text-white py-2.5 rounded-md hover:bg-opacity-90">‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®</button></div>
                        </form>
                    </div>
                    <div class="bg-white p-4 md:p-6 rounded-lg shadow"><h3 class="text-lg md:text-xl font-semibold mb-4">‡¶¨‡ßç‡¶Ø‡ßü‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ</h3><div class="overflow-x-auto"><table class="w-full text-left text-sm"><thead><tr class="bg-gray-100"><th class="p-2 md:p-3">‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ</th><th class="p-2 md:p-3">‡¶ñ‡¶æ‡¶§</th><th class="p-2 md:p-3 text-right">‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ (‡ß≥)</th><th class="p-2 md:p-3">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</th></tr></thead><tbody id="expenses-table-body"></tbody></table></div></div>
                </div>

                <div id="reports-view" class="view hidden">
                    <h2 class="text-2xl md:text-3xl font-bold mb-6">‡¶≤‡¶æ‡¶≠-‡¶ï‡ßç‡¶∑‡¶§‡¶ø ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü</h2>
                    <div class="bg-white p-4 md:p-6 rounded-lg shadow"><h3 class="text-lg md:text-xl font-semibold mb-4">‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü</h3><div class="overflow-x-auto"><table class="w-full text-left"><tbody id="pl-report-body"></tbody></table></div></div>
                </div>
            </main>
        </div>
    </div>
    
    <!-- Modals -->
    <div id="auth-modal" class="modal fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50">
        <div class="bg-white rounded-lg shadow-xl p-8 max-w-sm w-full mx-4">
            <h2 class="text-2xl font-bold mb-2 text-center">‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶´‡ßá</h2>
            <p class="text-gray-600 mb-6 text-center">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡ßá ‡¶™‡ßç‡¶∞‡¶¨‡ßá‡¶∂ ‡¶ï‡¶∞‡ßÅ‡¶®</p>
            <form id="auth-form">
                <div class="space-y-4">
                    <input type="email" id="auth-email" placeholder="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤" class="w-full p-3 border rounded" required>
                    <input type="password" id="auth-password" placeholder="‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° (‡¶ï‡¶Æ‡¶™‡¶ï‡ßç‡¶∑‡ßá ‡ß¨ ‡¶Ö‡¶ï‡ßç‡¶∑‡¶∞)" class="w-full p-3 border rounded" required>
                </div>
                <p id="auth-error" class="text-red-500 text-sm mt-2 h-4"></p>
                <div class="mt-4 flex flex-col space-y-3">
                    <button type="submit" id="login-btn" class="bg-sky-600 text-white py-3 rounded-md hover:bg-sky-700">‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</button>
                    <button type="button" id="register-btn" class="bg-green-600 text-white py-3 rounded-md hover:bg-green-700">‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</button>
                </div>
            </form>
             <div class="mt-6 text-center">
                <button id="use-local-storage-btn" class="text-sm text-gray-500 hover:underline">‡¶Ö‡¶•‡¶¨‡¶æ, ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶è‡¶á ‡¶°‡¶ø‡¶≠‡¶æ‡¶á‡¶∏‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®</button>
            </div>
        </div>
    </div>
    
    <div id="add-inventory-modal" class="modal hidden fixed inset-0 bg-gray-900 bg-opacity-60 flex items-center justify-center z-40"> <div class="bg-white rounded-lg shadow-xl p-6 max-w-md w-full mx-4"><h3 class="text-xl font-semibold mb-4">‡¶®‡¶§‡ßÅ‡¶® ‡¶á‡¶®‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶∞‡¶ø ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ</h3><form id="add-inventory-form"><div class="space-y-4"><input type="text" id="inv-name" placeholder="‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ" class="w-full p-2 border rounded" required><input type="text" id="inv-unit" placeholder="‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶™‡ßá‡¶∞ ‡¶è‡¶ï‡¶ï" class="w-full p-2 border rounded" required><input type="number" id="inv-stock" placeholder="‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶∏‡ßç‡¶ü‡¶ï" class="w-full p-2 border rounded" required><input type="number" id="inv-min-stock" placeholder="‡¶®‡ßç‡¶Ø‡ßÇ‡¶®‡¶§‡¶Æ ‡¶∏‡ßç‡¶ü‡¶ï ‡¶≤‡ßá‡¶≠‡ßá‡¶≤" class="w-full p-2 border rounded" required></div><div class="mt-6 flex justify-end space-x-4"><button type="button" class="cancel-modal-btn bg-gray-300 text-gray-800 py-2 px-4 rounded">‡¶¨‡¶æ‡¶§‡¶ø‡¶≤</button><button type="submit" class="bg-blue-600 text-white py-2 px-4 rounded">‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡ßÅ‡¶®</button></div></form></div></div>
    <div id="add-recipe-modal" class="modal hidden fixed inset-0 bg-gray-900 bg-opacity-60 flex items-center justify-center z-40"><div class="bg-white rounded-lg shadow-xl p-6 max-w-md w-full mx-4"><h3 class="text-xl font-semibold mb-4">‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ</h3><form id="add-recipe-form"><div class="space-y-4"><input type="text" id="recipe-name" placeholder="‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ" class="w-full p-2 border rounded" required><input type="number" id="recipe-price" placeholder="‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø (‡ß≥)" class="w-full p-2 border rounded" required><input type="number" id="recipe-cost" placeholder="‡¶â‡ßé‡¶™‡¶æ‡¶¶‡¶® ‡¶ñ‡¶∞‡¶ö (‡ß≥)" class="w-full p-2 border rounded" required></div><div class="mt-6 flex justify-end space-x-4"><button type="button" class="cancel-modal-btn bg-gray-300 text-gray-800 py-2 px-4 rounded">‡¶¨‡¶æ‡¶§‡¶ø‡¶≤</button><button type="submit" class="bg-green-600 text-white py-2 px-4 rounded">‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡ßÅ‡¶®</button></div></form></div></div>
    <div id="confirm-delete-modal" class="modal hidden fixed inset-0 bg-gray-900 bg-opacity-60 flex items-center justify-center z-50"><div class="bg-white rounded-lg shadow-xl p-6 max-w-sm w-full mx-4"><h3 class="text-xl font-semibold mb-2">‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§?</h3><p id="confirm-message" class="text-gray-600 mb-6"></p><div class="flex justify-end space-x-4"><button class="cancel-modal-btn bg-gray-300 text-gray-800 py-2 px-4 rounded">‡¶¨‡¶æ‡¶§‡¶ø‡¶≤</button><button id="confirm-delete-btn" class="bg-red-600 text-white py-2 px-4 rounded">‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®</button></div></div></div>
    <div id="toast-notification" class="toast fixed bottom-5 right-5 bg-gray-800 text-white py-3 px-6 rounded-lg shadow-lg opacity-0"></div>

    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";
        import { getFirestore, doc, setDoc, onSnapshot } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

        const sampleData = {
            inventory: [{ id: 1, name: "‡¶¶‡ßÅ‡¶ß", unit: "‡¶≤‡¶ø‡¶ü‡¶æ‡¶∞", stock: 15, minStock: 5 }],
            recipes: [{ id: 1, name: "‡¶Æ‡¶æ‡¶≤‡¶æ‡¶á ‡¶ö‡¶æ", cost: 18.10, price: 30 }],
            sales: [],
            expenses: []
        };

        let appData = {};
        const charts = {};
        let storageMode = '';
        let app, auth, db, userId, unsubscribeFromFirestore = null;

        const firebaseConfig = {
          apiKey: "AIzaSyAu_BYaBSmn--pqPHr_hf9XMkYU_SlQmQs",
          authDomain: "kichukkhon-cafe-dashboard.firebaseapp.com",
          projectId: "kichukkhon-cafe-dashboard",
          storageBucket: "kichukkhon-cafe-dashboard.firebasestorage.app",
          messagingSenderId: "971764643642",
          appId: "1:971764643642:web:86f8e0a871b046030a8203"
        };
        
        document.addEventListener('DOMContentLoaded', main);

        function main() {
            if (Object.keys(firebaseConfig).length < 5 || !firebaseConfig.apiKey) {
                document.getElementById('auth-modal').innerHTML = `<div class="bg-white rounded-lg shadow-xl p-8 max-w-sm w-full text-center"><h2 class="text-2xl font-bold mb-4 text-red-500">‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶® ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø!</h2><p class="text-gray-600">‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá dashboard.html ‡¶´‡¶æ‡¶á‡¶≤‡ßá‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Firebase ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶® ‡¶ï‡ßã‡¶° ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§</p></div>`;
            } else {
                app = initializeApp(firebaseConfig);
                auth = getAuth(app);
                db = getFirestore(app);
                setupAuthListeners();
            }
            document.getElementById('use-local-storage-btn').addEventListener('click', setupLocalStorage);
        }

        function setupAuthListeners() {
            onAuthStateChanged(auth, user => {
                if (user) {
                    userId = user.uid;
                    storageMode = 'cloud';
                    document.getElementById('user-email-display').textContent = user.email;
                    document.getElementById('auth-modal').classList.add('hidden');
                    document.getElementById('app-body').classList.remove('hidden');
                    listenForDataChanges();
                } else {
                    document.getElementById('auth-modal').classList.remove('hidden');
                    document.getElementById('app-body').classList.add('hidden');
                    if (unsubscribeFromFirestore) unsubscribeFromFirestore();
                }
            });

            document.getElementById('login-btn').addEventListener('click', e => {
                e.preventDefault();
                handleAuth(signInWithEmailAndPassword);
            });
            document.getElementById('register-btn').addEventListener('click', e => {
                e.preventDefault();
                handleAuth(createUserWithEmailAndPassword);
            });
            document.getElementById('logout-btn').addEventListener('click', () => signOut(auth));
        }

        async function handleAuth(authFunction) {
            const email = document.getElementById('auth-email').value;
            const password = document.getElementById('auth-password').value;
            const authError = document.getElementById('auth-error');
            authError.textContent = '';

            if (!email || !password) {
                authError.textContent = '‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶è‡¶¨‡¶Ç ‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶¶‡¶ø‡¶®‡•§';
                return;
            }
            
            if (authFunction === createUserWithEmailAndPassword && password.length < 6) {
                authError.textContent = '‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶ï‡¶Æ‡¶™‡¶ï‡ßç‡¶∑‡ßá ‡ß¨ ‡¶Ö‡¶ï‡ßç‡¶∑‡¶∞‡ßá‡¶∞ ‡¶π‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§';
                return;
            }

            try {
                await authFunction(auth, email, password);
            } catch (error) {
                console.error(error.code);
                authError.textContent = getBengaliAuthError(error.code);
            }
        }
        
        function getBengaliAuthError(code) {
            switch(code) {
                case 'auth/invalid-email': return '‡¶≠‡ßÅ‡¶≤ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡•§';
                case 'auth/user-not-found': return '‡¶è‡¶á ‡¶á‡¶Æ‡ßá‡¶á‡¶≤‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶®‡ßá‡¶á‡•§';
                case 'auth/wrong-password': return '‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶≠‡ßÅ‡¶≤ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§';
                case 'auth/invalid-credential': return '‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶¨‡¶æ ‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶∏‡¶†‡¶ø‡¶ï ‡¶®‡ßü‡•§';
                case 'auth/email-already-in-use': return '‡¶è‡¶á ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶¶‡¶ø‡ßü‡ßá ‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶Ü‡¶õ‡ßá‡•§';
                case 'auth/weak-password': return '‡¶™‡¶æ‡¶∏‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶° ‡¶ï‡¶Æ‡¶™‡¶ï‡ßç‡¶∑‡ßá ‡ß¨ ‡¶Ö‡¶ï‡ßç‡¶∑‡¶∞‡ßá‡¶∞ ‡¶π‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§';
                case 'auth/operation-not-allowed': return '‡¶≤‡¶ó‡¶á‡¶® ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø‡¶ü‡¶ø ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶®‡ßá‡¶á‡•§ Firebase ‡¶ï‡¶®‡¶∏‡ßã‡¶≤ ‡¶•‡ßá‡¶ï‡ßá Email/Password ‡¶≤‡¶ó‡¶á‡¶® ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§';
                default: return '‡¶è‡¶ï‡¶ü‡¶ø ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶ò‡¶ü‡ßá‡¶õ‡ßá, ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§';
            }
        }
        
        function setupLocalStorage() {
            storageMode = 'local';
            userId = 'local-user';
            document.getElementById('auth-modal').classList.add('hidden');
            document.getElementById('app-body').classList.remove('hidden');
            document.getElementById('user-email-display').textContent = '‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶∏‡ßç‡¶ü‡ßã‡¶∞‡ßá‡¶ú';
            loadDataFromLocal();
            initApp();
        }

        function listenForDataChanges() {
            const docRef = doc(db, "users", userId);
            if (unsubscribeFromFirestore) unsubscribeFromFirestore();
            unsubscribeFromFirestore = onSnapshot(docRef, (docSnap) => {
                if (docSnap.exists()) {
                    appData = docSnap.data();
                } else {
                    appData = JSON.parse(JSON.stringify(sampleData));
                    saveData();
                }
                initApp();
            });
        }
        
        function loadDataFromLocal() {
            appData = JSON.parse(localStorage.getItem('cafeData')) || JSON.parse(JSON.stringify(sampleData));
        }

        async function saveData() {
            if (storageMode === 'local') {
                localStorage.setItem('cafeData', JSON.stringify(appData));
            } else if (storageMode === 'cloud' && db && userId) {
                await setDoc(doc(db, "users", userId), appData, { merge: true });
            }
            showToast("‡¶°‡ßá‡¶ü‡¶æ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡ßá‡¶≠ ‡¶π‡ßü‡ßá‡¶õ‡ßá!");
        }

        function showToast(message) {
            const toast = document.getElementById('toast-notification');
            toast.textContent = message;
            toast.classList.add('show', 'opacity-100');
            setTimeout(() => { toast.classList.remove('show', 'opacity-100'); }, 3000);
        }

        function initApp() {
            setupNavigation();
            setupInventoryTabs();
            setupModals();
            setupDeleteListeners();
            populateAll();
        }

        function populateAll() {
            if (!appData || !appData.sales) return;
            populateSalesTable();
            populateSaleItemDropdown();
            populateInventoryTable();
            populateRecipeTable();
            populateExpensesTable();
            updateDashboardCards();
            calculateAndDisplayPL();
            createTopSellingChart();
            createProfitabilityChart();
            createExpenseChart();
        }
        
        function setupModals() {
            document.getElementById('add-inventory-item-btn').addEventListener('click', () => document.getElementById('add-inventory-modal').classList.remove('hidden'));
            document.getElementById('add-recipe-item-btn').addEventListener('click', () => document.getElementById('add-recipe-modal').classList.remove('hidden'));
            document.querySelectorAll('.cancel-modal-btn').forEach(btn => btn.addEventListener('click', () => {
                btn.closest('.modal').classList.add('hidden');
            }));
            document.getElementById('add-inventory-form').addEventListener('submit', handleAddInventory);
            document.getElementById('add-recipe-form').addEventListener('submit', handleAddRecipe);
        }
        
        function handleAddInventory(e) {
            e.preventDefault();
            const newInv = { id: Date.now(), name: e.target.querySelector('#inv-name').value, unit: e.target.querySelector('#inv-unit').value, stock: parseFloat(e.target.querySelector('#inv-stock').value), minStock: parseFloat(e.target.querySelector('#inv-min-stock').value) };
            if(!appData.inventory) appData.inventory = [];
            appData.inventory.push(newInv);
            saveData();
            populateInventoryTable();
            e.target.closest('.modal').classList.add('hidden');
            e.target.reset();
        }
        function handleAddRecipe(e) {
            e.preventDefault();
            const newRecipe = { id: Date.now(), name: e.target.querySelector('#recipe-name').value, price: parseFloat(e.target.querySelector('#recipe-price').value), cost: parseFloat(e.target.querySelector('#recipe-cost').value) };
            if(!appData.recipes) appData.recipes = [];
            appData.recipes.push(newRecipe);
            saveData();
            populateAll();
            e.target.closest('.modal').classList.add('hidden');
            e.target.reset();
        }

        function populateInventoryTable() {
            const tableBody = document.getElementById('inventory-table-body');
            tableBody.innerHTML = '';
            (appData.inventory || []).forEach(item => {
                const status = item.stock < item.minStock ? '<span class="text-red-500 font-semibold">‡¶ï‡¶Æ</span>' : '<span class="text-green-500 font-semibold">‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá</span>';
                tableBody.innerHTML += `<tr><td class="p-2 md:p-3 border-t">${item.name}</td><td class="p-2 md:p-3 border-t">${item.stock} ${item.unit}</td><td class="p-2 md:p-3 border-t">${item.minStock} ${item.unit}</td><td class="p-2 md:p-3 border-t">${status}</td><td class="p-2 md:p-3 border-t"><button class="delete-inventory-btn text-red-600 hover:text-red-800 font-semibold" data-id="${item.id}">‡¶Æ‡ßÅ‡¶õ‡ßÅ‡¶®</button></td></tr>`;
            });
        }
        
        function populateRecipeTable() {
            const tableBody = document.getElementById('recipe-table-body');
            tableBody.innerHTML = '';
            (appData.recipes || []).forEach(item => {
                const profit = item.price - item.cost;
                const profitMargin = item.price > 0 ? (profit / item.price) * 100 : 0;
                tableBody.innerHTML += `<tr><td class="p-2 md:p-3 border-t">${item.name}</td><td class="p-2 md:p-3 border-t text-right">${profit.toFixed(2)}</td><td class="p-2 md:p-3 border-t text-right">${profitMargin.toFixed(1)}%</td><td class="p-2 md:p-3 border-t"><button class="delete-recipe-btn text-red-600 hover:text-red-800 font-semibold" data-id="${item.id}">‡¶Æ‡ßÅ‡¶õ‡ßÅ‡¶®</button></td></tr>`;
            });
        }
        
        document.getElementById('add-sale-form').addEventListener('submit', function(e) {
            e.preventDefault();
            const recipe = (appData.recipes || []).find(r => r.id == this['sale-item'].value);
            const quantity = parseInt(this['sale-quantity'].value);
            if(recipe && quantity > 0) {
                const newSale = { id: Date.now(), date: new Date().toLocaleDateString('en-GB'), name: recipe.name, quantity: quantity, total: recipe.price * quantity };
                if(!appData.sales) appData.sales = [];
                appData.sales.push(newSale);
                saveData();
                populateAll();
                this.reset();
            }
        });

        document.getElementById('add-expense-form').addEventListener('submit', function(e) {
            e.preventDefault();
            const category = this['expense-category'].value;
            const amount = parseFloat(this['expense-amount'].value);
            if(category && amount > 0) {
                if(!appData.expenses) appData.expenses = [];
                appData.expenses.push({ id: Date.now(), date: new Date().toLocaleDateString('en-GB'), category, amount });
                saveData();
                populateAll();
                this.reset();
            }
        });
        
        function setupNavigation() {
            const navItems = document.querySelectorAll('.nav-item');
            const views = document.querySelectorAll('.view');
            navItems.forEach(item => {
                item.addEventListener('click', (e) => {
                    e.preventDefault();
                    const targetId = item.getAttribute('href').substring(1) + '-view';
                    navItems.forEach(i => i.classList.remove('active'));
                    item.classList.add('active');
                    views.forEach(view => {
                        view.classList.toggle('hidden', view.id !== targetId);
                    });
                });
            });
        }
        
        function setupInventoryTabs() {
            const tabButtons = document.querySelectorAll('.inventory-tab-btn');
            const tabContents = document.querySelectorAll('.inventory-tab-content');
            tabButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const tab = button.dataset.tab;
                    tabButtons.forEach(btn => {
                        btn.classList.toggle('border-[#8A9A5B]', btn.dataset.tab === tab);
                        btn.classList.toggle('font-semibold', btn.dataset.tab === tab);
                        btn.classList.toggle('border-transparent', btn.dataset.tab !== tab);
                        btn.classList.toggle('text-gray-500', btn.dataset.tab !== tab);
                    });
                    tabContents.forEach(content => {
                        content.classList.toggle('hidden', content.id !== `${tab}-tab-content`);
                    });
                });
            });
        }
        
        function setupDeleteListeners() {
            document.getElementById('inventory-table-body').addEventListener('click', handleDeleteClick);
            document.getElementById('recipe-table-body').addEventListener('click', handleDeleteClick);
            document.getElementById('sales-table-body').addEventListener('click', handleDeleteClick);
            document.getElementById('expenses-table-body').addEventListener('click', handleDeleteClick);
        }
        
        function handleDeleteClick(e) {
            const target = e.target.closest('button');
            if (!target) return;
            const id = target.dataset.id;
            if (target.classList.contains('delete-inventory-btn')) {
                showConfirmModal("‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶è‡¶á ‡¶á‡¶®‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶∞‡¶ø ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡¶ü‡¶ø ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶§‡ßá ‡¶ö‡¶æ‡¶®?", () => {
                    appData.inventory = appData.inventory.filter(item => item.id != id);
                    saveData().then(populateAll);
                    showToast("‡¶á‡¶®‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶∞‡¶ø ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§");
                });
            } else if (target.classList.contains('delete-recipe-btn')) {
                showConfirmModal("‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶è‡¶á ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡¶ü‡¶ø ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶§‡ßá ‡¶ö‡¶æ‡¶®?", () => {
                    appData.recipes = appData.recipes.filter(item => item.id != id);
                    saveData().then(populateAll);
                    showToast("‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§");
                });
            } else if (target.classList.contains('delete-sale-btn')) {
                 showConfirmModal("‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶è‡¶á ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü‡ßá‡¶∞ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨‡¶ü‡¶ø ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶§‡ßá ‡¶ö‡¶æ‡¶®?", () => {
                    appData.sales = appData.sales.filter(item => item.id != id);
                    saveData().then(populateAll);
                    showToast("‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡ßü‡ßá‡¶∞ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§");
                });
            } else if (target.classList.contains('delete-expense-btn')) {
                 showConfirmModal("‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶è‡¶á ‡¶¨‡ßç‡¶Ø‡ßü‡ßá‡¶∞ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨‡¶ü‡¶ø ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶§‡ßá ‡¶ö‡¶æ‡¶®?", () => {
                    appData.expenses = appData.expenses.filter(item => item.id != id);
                    saveData().then(populateAll);
                    showToast("‡¶¨‡ßç‡¶Ø‡ßü‡ßá‡¶∞ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§");
                });
            }
        }

        function showConfirmModal(message, onConfirm) {
            const modal = document.getElementById('confirm-delete-modal');
            modal.querySelector('#confirm-message').textContent = message;
            const confirmBtn = modal.querySelector('#confirm-delete-btn');
            const newConfirmBtn = confirmBtn.cloneNode(true);
            confirmBtn.parentNode.replaceChild(newConfirmBtn, confirmBtn);
            newConfirmBtn.addEventListener('click', () => {
                onConfirm();
                modal.classList.add('hidden');
            });
            modal.classList.remove('hidden');
        }
        
        function updateDashboardCards() {
            const today = new Date().toLocaleDateString('en-GB');
            const todaySales = (appData.sales || []).filter(s => s.date === today).reduce((sum, s) => sum + s.total, 0);
            document.getElementById('today-sales').textContent = `‡ß≥ ${todaySales.toLocaleString('bn-BD')}`;
            const lowStockItems = (appData.inventory || []).filter(i => i.stock < i.minStock);
            document.getElementById('low-stock-items-count').textContent = `${lowStockItems.length} ‡¶ü‡¶ø`;
            const lowStockList = document.getElementById('low-stock-list');
            lowStockList.innerHTML = '';
            if (lowStockItems.length > 0) {
                lowStockItems.forEach(item => {
                    lowStockList.innerHTML += `<li class="flex justify-between items-center p-2 rounded"><span>${item.name}</span> <span class="font-semibold text-red-500">${item.stock} ${item.unit}</span></li>`;
                });
            } else {
                lowStockList.innerHTML = `<p class="text-gray-500">‡¶∏‡ßç‡¶ü‡¶ï ‡¶™‡¶∞‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶§ ‡¶Ü‡¶õ‡ßá‡•§</p>`;
            }
        }
        
        function calculateAndDisplayPL() {
            const totalSales = (appData.sales || []).reduce((sum, s) => sum + s.total, 0);
            const cogs = (appData.sales || []).reduce((sum, sale) => {
                const recipe = (appData.recipes || []).find(r => r.name === sale.name);
                return sum + (recipe ? recipe.cost * sale.quantity : 0);
            }, 0);
            const totalExpenses = (appData.expenses || []).reduce((sum, e) => sum + e.amount, 0);
            const netProfit = totalSales - cogs - totalExpenses;
            document.getElementById('monthly-profit').textContent = `‡ß≥ ${netProfit.toLocaleString('bn-BD')}`;
            document.getElementById('pl-report-body').innerHTML = `
                <tr class="font-bold bg-green-50"><td class="p-3 border-b">‡¶Æ‡ßã‡¶ü ‡¶Ü‡ßü</td><td class="p-3 border-b text-right">‡ß≥ ${totalSales.toLocaleString('bn-BD')}</td></tr>
                <tr class="font-bold bg-red-50"><td class="p-3 border-b">‡¶Æ‡ßã‡¶ü ‡¶¨‡ßç‡¶Ø‡ßü</td><td class="p-3 border-b text-right">‡ß≥ ${(cogs + totalExpenses).toLocaleString('bn-BD')}</td></tr>
                <tr class="bg-gray-50"><td class="p-3 pl-8">‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶§ ‡¶™‡¶£‡ßç‡¶Ø‡ßá‡¶∞ ‡¶ñ‡¶∞‡¶ö (COGS)</td><td class="p-3 text-right">‡ß≥ ${cogs.toLocaleString('bn-BD')}</td></tr>
                <tr class="bg-gray-50"><td class="p-3 pl-8">‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶ñ‡¶∞‡¶ö</td><td class="p-3 text-right">‡ß≥ ${totalExpenses.toLocaleString('bn-BD')}</td></tr>
                <tr class="font-bold text-lg bg-blue-50"><td class="p-4">‡¶®‡ßÄ‡¶ü ‡¶≤‡¶æ‡¶≠</td><td class="p-4 text-right">‡ß≥ ${netProfit.toLocaleString('bn-BD')}</td></tr>
            `;
        }

        function populateSaleItemDropdown() {
            const select = document.getElementById('sale-item');
            select.innerHTML = '';
            (appData.recipes || []).forEach(recipe => {
                select.innerHTML += `<option value="${recipe.id}">${recipe.name}</option>`;
            });
        }
        
        function populateSalesTable() {
            const tableBody = document.getElementById('sales-table-body');
            tableBody.innerHTML = '';
            [...(appData.sales || [])].reverse().forEach(sale => {
                tableBody.innerHTML += `<tr><td class="p-2 md:p-3 border-t">${sale.date}</td><td class="p-2 md:p-3 border-t">${sale.name}</td><td class="p-2 md:p-3 border-t text-right">${sale.quantity}</td><td class="p-2 md:p-3 border-t text-right">${sale.total.toLocaleString('bn-BD')}</td><td class="p-2 md:p-3 border-t"><button class="delete-sale-btn text-red-600 hover:text-red-800 font-semibold" data-id="${sale.id}">‡¶Æ‡ßÅ‡¶õ‡ßÅ‡¶®</button></td></tr>`;
            });
        }
        
        function populateExpensesTable() {
            const tableBody = document.getElementById('expenses-table-body');
            tableBody.innerHTML = '';
            [...(appData.expenses || [])].reverse().forEach(item => {
                tableBody.innerHTML += `<tr><td class="p-2 md:p-3 border-t">${item.date}</td><td class="p-2 md:p-3 border-t">${item.category}</td><td class="p-2 md:p-3 border-t text-right">${item.amount.toLocaleString('bn-BD')}</td><td class="p-2 md:p-3 border-t"><button class="delete-expense-btn text-red-600 hover:text-red-800 font-semibold" data-id="${item.id}">‡¶Æ‡ßÅ‡¶õ‡ßÅ‡¶®</button></td></tr>`;
            });
        }
        
        function createGenericChart(chartId, type, data, options) {
            const canvasElement = document.getElementById(chartId);
            if (!canvasElement) {
                return; 
            }
            const ctx = canvasElement.getContext('2d');
            if (charts[chartId]) charts[chartId].destroy();
            charts[chartId] = new Chart(ctx, { type, data, options });
        }
        
        function createTopSellingChart() {
            const salesData = (appData.sales || []).reduce((acc, sale) => { acc[sale.name] = (acc[sale.name] || 0) + sale.quantity; return acc; }, {});
            const sortedSales = Object.entries(salesData).sort(([, a], [, b]) => b - a);
            createGenericChart('topSellingChart', 'bar', {
                labels: sortedSales.map(item => item[0]),
                datasets: [{ label: '‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø‡¶§ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£', data: sortedSales.map(item => item[1]), backgroundColor: '#8A9A5B', borderRadius: 4 }]
            }, { responsive: true, maintainAspectRatio: false, scales: { y: { beginAtZero: true } }, plugins: { legend: { display: false } } });
        }

        function createProfitabilityChart() {
            const sortedRecipes = [...(appData.recipes || [])].sort((a,b) => (b.price - b.cost) - (a.price - a.cost));
            createGenericChart('profitabilityChart', 'doughnut', {
                labels: sortedRecipes.map(r => r.name),
                datasets: [{ label: '‡¶≤‡¶æ‡¶≠‡ßá‡¶∞ ‡¶π‡¶æ‡¶∞ (%)', data: sortedRecipes.map(r => r.price > 0 ? ((r.price-r.cost)/r.price)*100 : 0), backgroundColor: ['#8A9A5B', '#A9B96D', '#CAD39C', '#E3E4DB', '#BFA98F'] }]
            }, { responsive: true, maintainAspectRatio: false, plugins: { legend: { position: 'bottom' } } });
        }
        
        function createExpenseChart() {
            const expenseData = (appData.expenses || []).reduce((acc, exp) => { acc[exp.category] = (acc[exp.category] || 0) + exp.amount; return acc; }, {});
            createGenericChart('expenseChart', 'pie', {
                labels: Object.keys(expenseData),
                datasets: [{ data: Object.values(expenseData), backgroundColor: ['#8A9A5B', '#A9B96D', '#CAD39C', '#BFA98F', '#A4846C'] }]
            }, { responsive: true, maintainAspectRatio: false, plugins: { legend: { position: 'bottom' } } });
        }

    </script>
</body>
</html>
